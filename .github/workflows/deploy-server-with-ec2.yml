name: deploy to ec2 with jar

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout branch
        uses: actions/checkout@v2

#      자바 설치
      - name: setup java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
#          temurin이란걸 많이 사용함. oracle java이런거..
          distribution: 'temurin'

#      build(명령어 : ./gradlew bootJar(build))
#      bootJar : 실행 가능한 jar 파일만
#      build : 실행 가능한 jar, plain jar
      - name: build jar
        working-directory: .
        run: |
          chmod 777 ./gradlew
          ./gradlew bootJar
      

#      jar파일 전송
      - name: copy jar to ec2 my-instance
        uses: appleboy/scp-action@master
        with:
#          인스턴스 my-instance의 도메인 주소
          host: ec2-43-202-68-92.ap-northeast-2.compute.amazonaws.com
          username: ubuntu
#          pemkey를 통해 해당 인스턴스에 접근
          key: ${{secrets.EC2_PEMKEY}}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu"

#      위에 설치한건 github에서 제공한 임시 컴퓨터
#      지금은 ec2에 java 설치 apt-get install java 이거 할 예정
      - name: install java and run jar on ec2 my-instance
#        이 컴퓨터로 들어갈 예정
        uses: appleboy/ssh-action@master
        with:
          host: ec2-43-202-68-92.ap-northeast-2.compute.amazonaws.com
          username: ubuntu
          key: ${{secrets.EC2_PEMKEY}}
#          shell programming. | 이건 여러 줄인 경우  사용
          script: |
            if ! type java > /dev/null; then
              sudo apt-get update && sudo apt-get install openjdk-11-jdk -y
            else
              echo "java is already installed"
            fi
            sudo killall java
            nohup java -jar /home/ubuntu/build/libs/*.jar \
            --spring.redis.host=${{secrets.REDIS_HOST}} \
            --spring.datasource.url=jdbc:mariadb://${{secrets.DB_HOST}}:3306/order_system \
            --spring.datasource.username=admin \
            --spring.datasource.password=${{secrets.DB_PW}} \
            --cloud.aws.credentials.access-key=${{secrets.S3_KEY}} \
            --cloud.aws.credentials.secret-key=${{secrets.S3_SECRET}} > /home/ubuntu/app.log 2>&1 &


#####################인스턴스 두번째 꺼#########################
      - name: copy jar to ec2 my-instance2
        uses: appleboy/scp-action@master
        with:
          #          인스턴스 my-instance2의 도메인 주소
          host: ec2-43-201-146-238.ap-northeast-2.compute.amazonaws.com
          username: ubuntu
          key: ${{secrets.EC2_PEMKEY}}
          source: "./build/libs/*.jar"
          target: "/home/ubuntu"

      - name: install java and run jar on ec2 my-instance2
        uses: appleboy/ssh-action@master
        with:
          host: ec2-43-201-146-238.ap-northeast-2.compute.amazonaws.com
          username: ubuntu
          key: ${{secrets.EC2_PEMKEY}}
          script: |
            if ! type java > /dev/null; then
              sudo apt-get update && sudo apt-get install openjdk-11-jdk -y
            else
              echo "java is already installed"
            fi
            sudo killall java
            nohup java -jar /home/ubuntu/build/libs/*.jar \
            --spring.redis.host=${{secrets.REDIS_HOST}} \
            --spring.datasource.url=jdbc:mariadb://${{secrets.DB_HOST}}:3306/order_system \
            --spring.datasource.username=admin \
            --spring.datasource.password=${{secrets.DB_PW}} \
            --cloud.aws.credentials.access-key=${{secrets.S3_KEY}} \
            --cloud.aws.credentials.secret-key=${{secrets.S3_SECRET}} > /home/ubuntu/app.log 2>&1 &
